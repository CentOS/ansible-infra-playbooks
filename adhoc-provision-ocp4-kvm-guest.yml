#!/usr/bin/env ansible-playbook

---
# This playbook is an ad-hoc task used to deploy kvm nodes for OCP4
# It used the following variables, declared through inventory (group/host vars):
#  rhcos_install_img_url: # Where to grab rhcos install http://<host>/<path>/rhcos/rhcos-4.3.8-x86_64-metal.x86_64.raw.gz
#  rhcos_ignition_file_url: # where to find ignition file http://<host>/config/rhcos/bootstrap.ign #to be modified based on group or host level, for bootstrap, master, etc
#  rhcos_install_url: #where kernel/initrd.img and .treeinfo are to be found
#  kvm_guest_vcpus:
#  kvm_guest_memory:
#  kvm_guest_disk_size:  #in GiB, not to be added, so example: 120
#  kvm_host_bridge: # which defined bridged to use for the guest vnic
#  kvm_guest_vnic: ens3
#  ip:
#  nameservers:
#    - 192.168.1.1
#    - 192.168.2.2
#  gateway  
#  deploy_host: # http server serving ignition files
- hosts: "{{ ocp_init_hosts }}"
  become: true
  gather_facts: false
  vars_prompt:
    - name: "ocp_init_hosts"
      prompt: "[WARNING] KVM guest to be installed with OCP => "
      private: no  

  tasks:

    - name: == OCP KVM provisioning == Importing generated Ignition files
      template: 
        src: "{{ filestore }}/rhcos/{{ item }}"
        dest: "/var/www/html/repo/ocp/{{ item }}"
        mode: 0755
      with_items:
        - bootstrap.ign
        - master.ign
        - worker.ign
      delegate_to: "{{ deploy_host }}"
      tags:
        - ignition

    - name: == OCP KVM provisioning == Checking OCP Virtual Guest exist[s]
      virt: 
        name: "{{ inventory_hostname }}" 
        state: running
      ignore_errors: yes
      no_log: True
      delegate_to: "{{ kvm_host }}"
      register: vm_exists

    - name: == OCP KVM provisioning == Creating temporary virt-install command
      template: 
        src: ../templates/ansible-virt-install-ocp.j2 
        dest: "/var/lib/libvirt/virt-install-{{ inventory_hostname }}" 
        mode: 0750 
        owner: root 
        group: root
      delegate_to: "{{ kvm_host }}"
      tags:
        - ks

    - name: == OCP KVM provisioning == Deploying the OCP Virtual Guest[s]
      command: "/var/lib/libvirt/virt-install-{{ inventory_hostname }}"
      when: vm_exists is failed
      delegate_to: "{{ kvm_host }}"

    - name: == OCP KVM provisioning == Waiting for sshd to be available on the deployed node
      wait_for: 
        port: 22 
        host: "{{ ip }}"
        timeout: 1200 
      delegate_to: "{{ deploy_host }}"
      when: vm_exists is failed

    - name: == OCP KVM provisioning == Ensuring we remove the templatized virt-install script
      file:
        path: "/var/lib/libvirt/virt-install-{{ inventory_hostname }}"
        state: absent
      delegate_to: "{{ kvm_host }}"
