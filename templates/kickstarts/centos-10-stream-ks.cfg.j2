#version=DEVEL

# Use network installation
url --url="{{ mirror_baseurl | default('http://mirror.stream.centos.org/10-stream') }}/BaseOS/{{ arch }}/os/"

text
# Disabling Setup Agent on first boot
firstboot --disable
# Keyboard layouts
# old format: keyboard be-latin1
# new format:
keyboard --vckeymap=be-latin1 --xlayouts='us'
# System language
lang en_GB.UTF-8

# Network information
network  --hostname={{ inventory_hostname }}
{% if bridge_nic is defined and bridge_nic %}
network  --bootproto=static --device={{ bridge_name | default('br0') }} --bridgeslaves={{ pxe_bootdev }} --gateway={{ gateway }} --ip={{ ip }} {% for ns in dns %} --nameserver={{ ns }} {% endfor %} --netmask={{ netmask }} --ipv6=auto --activate 
{% else %}
network  --bootproto=static --device={{ pxe_bootdev }} --gateway={{ gateway }} --ip={{ ip }}  {% for ns in dns %} --nameserver={{ ns }} {% endfor %} --netmask={{ netmask }} --ipv6=auto --activate 
{% endif %}

# Root password
rootpw --iscrypted {{ root_pass | password_hash('sha512') }}

# System timezone
timezone Etc/UTC --utc
# System bootloader configuration
bootloader --location=mbr --boot-drive={{ hdd_install_dev | default('sda')}}
# Partition clearing information
clearpart --all --initlabel
zerombr

# Disk partitioning information
# Adding first reqpart to automatically add /boot/efi or prepboot for aarch64, uefi, or IBM Power architectures
reqpart

{% if use_md_raid and md_raid_level == 1 %}
# Using software raid 1
part biosboot  --size=1  --ondisk=sda --fstype=biosboot
part biosboot  --size=1  --ondisk=sdb --fstype=biosboot
part raid.603 --fstype="mdmember" --ondisk=sdb --size=20000 --grow
part raid.469 --fstype="mdmember" --ondisk=sda --size=1024
part raid.597 --fstype="mdmember" --ondisk=sda --size=20000 --grow
part raid.475 --fstype="mdmember" --ondisk=sdb --size=1024
raid pv.609 --device=pv00 --fstype="lvmpv" --level=RAID1 raid.597 raid.603
raid /boot --device=boot --fstype="ext4" --level=RAID1 raid.469 raid.475
volgroup vg_{{ inventory_hostname_short }} --pesize=4096 pv.609

{% elif use_md_raid and md_raid_level == 0 %}
# Using software raid 0
part raid.603 --fstype="mdmember" --ondisk=sdb --size=20000 --grow
part raid.469 --fstype="mdmember" --ondisk=sda --size=1024
part raid.597 --fstype="mdmember" --ondisk=sda --size=20000 --grow
part raid.475 --fstype="mdmember" --ondisk=sdb --size=1024
raid pv.609 --device=pv00 --fstype="lvmpv" --level=RAID0 raid.597 raid.603
raid /boot --device=boot --fstype="ext4" --level=RAID0 raid.469 raid.475
volgroup vg_{{ inventory_hostname_short }} --pesize=4096 pv.609

{% else %}
# Not using software raid
part biosboot  --size=1  --ondisk={{ hdd_install_dev | default('sda')}} --fstype=biosboot
part /boot --fstype="ext4" --ondisk={{ hdd_install_dev | default('sda')}} --size=1024
part pv.14 --fstype="lvmpv" --ondisk={{ hdd_install_dev | default('sda')}} --size=20000 --grow
volgroup vg_{{ inventory_hostname_short }} --pesize=4096 pv.14
{% endif %}
# Common section for partitions : on top of VG, despite md device or not, see above
{% if lv_root_expand %}
logvol /  --fstype="ext4" --size={{ lv_root_size }} --name=root --vgname=vg_{{ inventory_hostname_short }} --grow 
{% else %}
logvol /  --fstype="ext4" --size={{ lv_root_size }} --name=root --vgname=vg_{{ inventory_hostname_short }}  
{% endif %}
logvol /home  --fstype="ext4" --size={{ lv_home_size }} --name=home --vgname=vg_{{ inventory_hostname_short }}
logvol swap  --fstype="swap" --size=2048 --name=swap --vgname=vg_{{ inventory_hostname_short }}


#Ensuring rebooting at the end
reboot

%post
# Ensuring that sshd is locked on reboot with key-based auth only
sed -i 's/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config 

{% if centos_infra_env == "qa" %}
echo "PermitRootLogin yes" > /etc/ssh/sshd_config.d/01-permitrootlogin.conf
mkdir /root/.ssh
echo "{{ qa_jenkins_key | default('ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC+kByMD9fmCXAkFUHau3EtHimd3UZ3chQKaDGnss+WO2dKMYljUiXf/qmI6tXP1DFcS7BchDAZkrh3O9YA+ZGzk59a+3fBYB31Mjogh83qATRJOB/aa8Q3vdijfUJH/9OFc7pzdP17+hlGiCnQuW1YxGUa2Q/dOmfZdgWWuwLTq4xTxpAFihzkY6jiDZ6ZPg75KgH1qurYQxyggnbwmC3SI4EEStNkG1I2+YRBZpGgQBp/DIFvPxoMMuwuAv5bnNQlAhKi8Turx+fzWRMXXFgUTGD//wjvZffN4LZ0wXqIaXv3cKUEJ9ToDxFTcBC1NeefYhYouSQMKFAp36EM+0/okdsw+kokUBc83uJClZ4WjmyGlHn0RfcBMU8TyZhy1HAwNd+t1XPwgvgasoAojNINtD+kVA+UqZt3FuBhUD5Y0jm/7yjozDWiyczjhTKimH7Bm/mWdI/xOgTbV59yreaXo2L5Ghh6TgCBQ/i4d+NOAIPPiwGGGQvKn+9CFBrWckE=') }}" >> /root/.ssh/authorized_keys
chmod 700 /root/.ssh
chmod 600 /root/.ssh/* ; chcon -v -R -t ssh_home_t /root/.ssh**

cat > /etc/yum.repos.d/centos.repo << EOF
[baseos]
name=CentOS Stream $releasever - BaseOS
baseurl={{ mirror_baseurl | default('http://mirror.stream.centos.org/10-stream') }}/BaseOS/{{ arch }}/os/
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial-SHA256
gpgcheck=1
repo_gpgcheck=0
metadata_expire=6h
enabled=1

[baseos-debuginfo]
name=CentOS Stream $releasever - BaseOS - Debug
metalink=https://mirrors.centos.org/metalink?repo=centos-baseos-debug-$stream&arch=$basearch&protocol=https,http
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial-SHA256
gpgcheck=1
repo_gpgcheck=0
metadata_expire=6h
enabled=0

[baseos-source]
name=CentOS Stream $releasever - BaseOS - Source
metalink=https://mirrors.centos.org/metalink?repo=centos-baseos-source-$stream&arch=source&protocol=https,http
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial-SHA256
gpgcheck=1
repo_gpgcheck=0
metadata_expire=6h
enabled=0

[appstream]
name=CentOS Stream $releasever - AppStream
baseurl={{ mirror_baseurl | default('http://mirror.stream.centos.org/10-stream') }}/AppStream/{{ arch }}/os/
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial-SHA256
gpgcheck=1
repo_gpgcheck=0
metadata_expire=6h
countme=1
enabled=1

[appstream-debuginfo]
name=CentOS Stream $releasever - AppStream - Debug
metalink=https://mirrors.centos.org/metalink?repo=centos-appstream-debug-$stream&arch=$basearch&protocol=https,http
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial
gpgcheck=1
repo_gpgcheck=0
metadata_expire=6h
enabled=0

[appstream-source]
name=CentOS Stream $releasever - AppStream - Source
metalink=https://mirrors.centos.org/metalink?repo=centos-appstream-source-$stream&arch=source&protocol=https,http
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial
gpgcheck=1
repo_gpgcheck=0
metadata_expire=6h
enabled=0

[crb]
name=CentOS Stream $releasever - CRB
baseurl={{ mirror_baseurl | default('http://mirror.stream.centos.org/10-stream') }}/CRB/{{ arch }}/os/
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial-SHA256
gpgcheck=1
repo_gpgcheck=0
metadata_expire=6h
countme=1
enabled=0

[crb-debuginfo]
name=CentOS Stream $releasever - CRB - Debug
metalink=https://mirrors.centos.org/metalink?repo=centos-crb-debug-$stream&arch=$basearch&protocol=https,http
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial-SHA256
gpgcheck=1
repo_gpgcheck=0
metadata_expire=6h
enabled=0

[crb-source]
name=CentOS Stream $releasever - CRB - Source
metalink=https://mirrors.centos.org/metalink?repo=centos-crb-source-$stream&arch=source&protocol=https,http
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial-SHA256
gpgcheck=1
repo_gpgcheck=0
metadata_expire=6h
enabled=0

EOF

# Disabling addons
cat > /etc/yum.repos.d/centos-addons.repo << EOF
# All disabled for QA tests
EOF


# Creating simple wrapper for TMT that Jenkins will call

cat > /usr/local/bin/stream-tests << EOF
mkdir /tmp/tests && cd /tmp/tests
which git >/dev/null 2>&1 || dnf install -d0 -y git
which pip  >/dev/null 2>&1 || dnf install -d0 -y python3-pip
git clone https://gitlab.com/CentOS/Integration/compose-tests.git && cd compose-tests
pip install tmt
dnf install -d0 -y https://kojipkgs.fedoraproject.org//packages/beakerlib/1.29.3/5.fc40/noarch/beakerlib-1.29.3-5.fc40.noarch.rpm
tmt -vvv -c distro=centos-stream-10 run -a provision --how=local 

EOF
chmod 755 /usr/local/bin/stream-tests

{% else %}

sed -i 's/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config 

# Using Ansible vars to automatically render template and add users 
{% for user in admins_list %}
# Adding user,ssh pub key and sudo right for {{ user.login_name }} 
/sbin/useradd {{ user.login_name}} -c "{{ user.full_name }}"
mkdir /home/{{ user.login_name }}/.ssh
{% for key in user.ssh_pub_key  %}
  echo "{{ key }}" >> /home/{{ user.login_name }}/.ssh/authorized_keys
{% endfor %}
chmod 700 /home/{{ user.login_name }}/.ssh
chmod 600 /home/{{ user.login_name }}/.ssh/* ; chcon -v -R -t ssh_home_t /home/{{ user.login_name }}/.ssh*
chown -R {{ user.login_name }}.{{ user.login_name}} /home/{{ user.login_name }}/
echo "{{ user.login_name }} ALL=(ALL) NOPASSWD: ALL" >/etc/sudoers.d/{{ user.login_name }}
{% endfor %}

{% endif %}

%end   

%packages
@^minimal-environment
@standard
chrony

%end

%addon com_redhat_kdump --disable --reserve-mb='auto'

%end


